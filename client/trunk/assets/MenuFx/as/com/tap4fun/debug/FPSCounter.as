class com.tap4fun.debug.FPSCounter extends MovieClip
{
	static var symbolName:String = "FPSCounter";
	static var symbolOwner:Object = FPSCounter;
	var className:String = "FPSCounter";
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//										CONSTANTS												//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//										Public Properties										//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	[Inspectable(name="Update Frequency (Frames)",defaultValue=30)]
	public var updateFrequency:Number;
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//										Private Properties										//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	private var _updateIterator:Number;
	private var _samplerToggle:Boolean;
	private var _timerValue:Number;
	
	private var _fpsSamples:Array;
	
	private var _currentFPS:Number;
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//											Movie Clips											//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	public var tf_FPS:MovieClip;
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//											Constructor											//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	function FPSCounter()
	{
		this._updateIterator = 0;
		
		this._fpsSamples = new Array();
		this.tf_FPS.text = "--";
	}
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//											Private Methods										//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//											Public Methods										//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	public function onLoad():Void
	{
		this.start();
	}
	
	public function updateFPS():Void
	{
		if (this._samplerToggle == true)
		{
			this._timerValue = getTimer();
		}
		else
		{
			this._currentFPS = 1000 / (getTimer() - this._timerValue);
			this._fpsSamples.push(this._currentFPS);
		}
		this._samplerToggle = !this._samplerToggle;
		
		
		if (this._updateIterator >= this.updateFrequency)
		{
			var $fpsTot:Number = 0;
			for (var $j:Number = 0 ; $j < this._fpsSamples.length; $j++)
			{
				$fpsTot += this._fpsSamples[$j];
			}
			
			this.tf_FPS.text = ($fpsTot > 0)? Math.round($fpsTot / this._fpsSamples.length):"--";
			this._updateIterator = 0;
			this._fpsSamples = [];
		}
		else
		{
			this._updateIterator++;
		}
	}
	
	public function start():Void
	{
		this.onEnterFrame = this.updateFPS;
	}
	public function end():Void
	{
		delete this.onEnterFrame;
	}
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//										Static Functions										//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//										Getters and Setters										//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	//												Events											//
	//////////////////////////////////////////////////////////////////////////////////////////////////
	
}